// <auto-generated />
using System;
using CompHomp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompHomp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250529130922_AddDeletedUserRecord")]
    partial class AddDeletedUserRecord
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompHomp.Models.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Action");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLogs", (string)null);
                });

            modelBuilder.Entity("CompHomp.Models.Build", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CaseId")
                        .HasColumnType("int");

                    b.Property<int?>("CpuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GpuId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<int?>("MotherboardId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PsuId")
                        .HasColumnType("int");

                    b.Property<int?>("RamId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StorageId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CpuId");

                    b.HasIndex("GpuId");

                    b.HasIndex("MotherboardId");

                    b.HasIndex("PsuId");

                    b.HasIndex("RamId");

                    b.HasIndex("StorageId");

                    b.HasIndex("UserId");

                    b.ToTable("Builds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePrice = 250000.00m,
                            CaseId = 1,
                            CpuId = 1,
                            CreatedDate = new DateTime(2025, 5, 29, 17, 9, 22, 367, DateTimeKind.Local).AddTicks(1045),
                            Description = "High-performance gaming rig",
                            GpuId = 1,
                            IsCustom = false,
                            MotherboardId = 1,
                            Name = "Gaming Beast",
                            PsuId = 1,
                            RamId = 1,
                            Status = 1,
                            StorageId = 1,
                            TotalPrice = 0m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BasePrice = 350000.00m,
                            CaseId = 2,
                            CpuId = 2,
                            CreatedDate = new DateTime(2025, 5, 29, 17, 9, 22, 367, DateTimeKind.Local).AddTicks(1053),
                            Description = "Powerful workstation for professionals",
                            GpuId = 2,
                            IsCustom = false,
                            MotherboardId = 2,
                            Name = "Workstation Pro",
                            PsuId = 2,
                            RamId = 2,
                            Status = 1,
                            StorageId = 2,
                            TotalPrice = 0m,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("CompHomp.Models.BuildComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildId");

                    b.HasIndex("UserId");

                    b.ToTable("BuildComments");
                });

            modelBuilder.Entity("CompHomp.Models.BuildRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLike")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildId");

                    b.HasIndex("UserId");

                    b.ToTable("BuildRatings");
                });

            modelBuilder.Entity("CompHomp.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("CompHomp.Models.Case", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormFactor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxGPULength")
                        .HasColumnType("int");

                    b.Property<string>("MotherboardSupport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Cases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Black",
                            FormFactor = "Mid Tower",
                            MaxGPULength = 360,
                            MotherboardSupport = "ATX",
                            Name = "NZXT H510",
                            Price = 10000.00m
                        },
                        new
                        {
                            Id = 2,
                            Color = "Black",
                            FormFactor = "Mid Tower",
                            MaxGPULength = 315,
                            MotherboardSupport = "ATX",
                            Name = "Fractal Design Meshify C",
                            Price = 12000.00m
                        });
                });

            modelBuilder.Entity("CompHomp.Models.Cpu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("BaseClockSpeed")
                        .HasColumnType("float");

                    b.Property<int>("Cores")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Socket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TDP")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cpus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseClockSpeed = 3.6000000000000001,
                            Cores = 12,
                            Name = "Intel Core i7-12700K",
                            Price = 45000.00m,
                            Socket = "LGA1700",
                            TDP = 125
                        },
                        new
                        {
                            Id = 2,
                            BaseClockSpeed = 3.3999999999999999,
                            Cores = 16,
                            Name = "AMD Ryzen 9 5950X",
                            Price = 75000.00m,
                            Socket = "AM4",
                            TDP = 105
                        });
                });

            modelBuilder.Entity("CompHomp.Models.Gpu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoreClockSpeed")
                        .HasColumnType("int");

                    b.Property<int>("MemorySize")
                        .HasColumnType("int");

                    b.Property<string>("MemoryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TDP")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Gpus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoreClockSpeed = 1440,
                            MemorySize = 10,
                            MemoryType = "GDDR6X",
                            Name = "NVIDIA GeForce RTX 3080",
                            Price = 80000.00m,
                            TDP = 320
                        },
                        new
                        {
                            Id = 2,
                            CoreClockSpeed = 1825,
                            MemorySize = 16,
                            MemoryType = "GDDR6",
                            Name = "AMD Radeon RX 6800 XT",
                            Price = 70000.00m,
                            TDP = 300
                        });
                });

            modelBuilder.Entity("CompHomp.Models.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LogEntries");
                });

            modelBuilder.Entity("CompHomp.Models.LoginAttempt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttemptsCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastAttemptTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("LoginAttempts");
                });

            modelBuilder.Entity("CompHomp.Models.Motherboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Chipset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormFactor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemoryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Socket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Motherboards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Chipset = "Intel Z690",
                            FormFactor = "ATX",
                            MemoryType = "DDR4",
                            Name = "ASUS ROG Strix Z690-E Gaming",
                            Price = 35000.00m,
                            Socket = "LGA1700"
                        },
                        new
                        {
                            Id = 2,
                            Chipset = "AMD B550",
                            FormFactor = "ATX",
                            MemoryType = "DDR4",
                            Name = "MSI MPG B550 Gaming Carbon WiFi",
                            Price = 25000.00m,
                            Socket = "AM4"
                        });
                });

            modelBuilder.Entity("CompHomp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CompHomp.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuildId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("ComponentId")
                        .HasColumnType("int");

                    b.Property<string>("ComponentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("CompHomp.Models.Psu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Efficiency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormFactor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsModular")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Psus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Efficiency = "80+ Gold",
                            FormFactor = "ATX",
                            IsModular = true,
                            Name = "Corsair RM850x",
                            Power = 850,
                            Price = 15000.00m
                        },
                        new
                        {
                            Id = 2,
                            Efficiency = "80+ Platinum",
                            FormFactor = "ATX",
                            IsModular = true,
                            Name = "EVGA SuperNOVA 1000 P6",
                            Power = 1000,
                            Price = 20000.00m
                        });
                });

            modelBuilder.Entity("CompHomp.Models.PurchaseHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PurchaseHistories");
                });

            modelBuilder.Entity("CompHomp.Models.PurchaseHistoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PurchaseHistoryId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildId");

                    b.HasIndex("PurchaseHistoryId");

                    b.HasIndex("UserId");

                    b.ToTable("PurchaseHistoryItems");
                });

            modelBuilder.Entity("CompHomp.Models.Ram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("ModulesCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 32,
                            ModulesCount = 2,
                            Name = "Corsair Vengeance LPX 32GB",
                            Price = 15000.00m,
                            Speed = 3200,
                            Type = "DDR4"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 64,
                            ModulesCount = 4,
                            Name = "G.Skill Ripjaws V 64GB",
                            Price = 25000.00m,
                            Speed = 3600,
                            Type = "DDR4"
                        });
                });

            modelBuilder.Entity("CompHomp.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BuildId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildId");

                    b.HasIndex("UserId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("CompHomp.Models.SaleStatistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AverageOrderValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BuildName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalRevenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalSalesCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SaleStatistics");
                });

            modelBuilder.Entity("CompHomp.Models.Storage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("FormFactor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReadSpeed")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Storages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 1000,
                            FormFactor = "M.2",
                            Name = "Samsung 980 PRO 1TB NVMe SSD",
                            Price = 18000.00m,
                            ReadSpeed = 7000,
                            Type = "NVMe"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 2000,
                            FormFactor = "M.2",
                            Name = "Western Digital Black SN850 2TB NVMe SSD",
                            Price = 30000.00m,
                            ReadSpeed = 7000,
                            Type = "NVMe"
                        });
                });

            modelBuilder.Entity("CompHomp.Models.SystemSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuditLogRetentionDays")
                        .HasColumnType("int");

                    b.Property<int>("LockoutDurationMinutes")
                        .HasColumnType("int");

                    b.Property<int>("MaxLoginAttempts")
                        .HasColumnType("int");

                    b.Property<int>("MinPasswordLength")
                        .HasColumnType("int");

                    b.Property<bool>("RequireComplexPassword")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SystemSettings");
                });

            modelBuilder.Entity("CompHomp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAttempt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("LoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 999999,
                            Email = "deleted@user",
                            IsActive = false,
                            IsBlocked = true,
                            Login = "DELETED_USER",
                            LoginAttempts = 0,
                            Password = "$2a$11$R54hp/LlxPsC1Qxj9tai3eKFdSHM9G8/U.t1//clJ7QBy9D5wRwyu",
                            RegistrationDate = new DateTime(2025, 5, 29, 17, 9, 22, 118, DateTimeKind.Local).AddTicks(5938),
                            Role = 0
                        },
                        new
                        {
                            Id = 1,
                            Email = "admin@comphomp.com",
                            IsActive = true,
                            IsBlocked = false,
                            Login = "admin",
                            LoginAttempts = 0,
                            Password = "$2a$11$bUlMi57GlD/PUeRughmNCeCKwMcOBzkS/0YqfieNKyJPAl9eejJya",
                            RegistrationDate = new DateTime(2025, 5, 29, 17, 9, 22, 242, DateTimeKind.Local).AddTicks(9488),
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "user1@comphomp.com",
                            IsActive = true,
                            IsBlocked = false,
                            Login = "user1",
                            LoginAttempts = 0,
                            Password = "$2a$11$AVb8HaXyea6D2oUPSgPsNOU8t7mGRw.oPAIQTHQc23xqVvUVcwkjC",
                            RegistrationDate = new DateTime(2025, 5, 29, 17, 9, 22, 366, DateTimeKind.Local).AddTicks(9091),
                            Role = 0
                        });
                });

            modelBuilder.Entity("CompHomp.Models.UserAuthLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserAuthLogs");
                });

            modelBuilder.Entity("CompHomp.Models.AuditLog", b =>
                {
                    b.HasOne("CompHomp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompHomp.Models.Build", b =>
                {
                    b.HasOne("CompHomp.Models.Case", "Case")
                        .WithMany()
                        .HasForeignKey("CaseId");

                    b.HasOne("CompHomp.Models.Cpu", "Cpu")
                        .WithMany()
                        .HasForeignKey("CpuId");

                    b.HasOne("CompHomp.Models.Gpu", "Gpu")
                        .WithMany()
                        .HasForeignKey("GpuId");

                    b.HasOne("CompHomp.Models.Motherboard", "Motherboard")
                        .WithMany()
                        .HasForeignKey("MotherboardId");

                    b.HasOne("CompHomp.Models.Psu", "Psu")
                        .WithMany()
                        .HasForeignKey("PsuId");

                    b.HasOne("CompHomp.Models.Ram", "Ram")
                        .WithMany()
                        .HasForeignKey("RamId");

                    b.HasOne("CompHomp.Models.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageId");

                    b.HasOne("CompHomp.Models.User", "User")
                        .WithMany("Builds")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("Cpu");

                    b.Navigation("Gpu");

                    b.Navigation("Motherboard");

                    b.Navigation("Psu");

                    b.Navigation("Ram");

                    b.Navigation("Storage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompHomp.Models.BuildComment", b =>
                {
                    b.HasOne("CompHomp.Models.Build", "Build")
                        .WithMany("BuildComments")
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompHomp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Build");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompHomp.Models.BuildRating", b =>
                {
                    b.HasOne("CompHomp.Models.Build", "Build")
                        .WithMany("BuildRatings")
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompHomp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Build");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompHomp.Models.CartItem", b =>
                {
                    b.HasOne("CompHomp.Models.Build", "Build")
                        .WithMany()
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompHomp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CompHomp.Models.User", null)
                        .WithMany("CartItems")
                        .HasForeignKey("UserId1");

                    b.Navigation("Build");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompHomp.Models.Order", b =>
                {
                    b.HasOne("CompHomp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CompHomp.Models.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompHomp.Models.OrderItem", b =>
                {
                    b.HasOne("CompHomp.Models.Build", "Build")
                        .WithMany()
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompHomp.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Build");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CompHomp.Models.PurchaseHistory", b =>
                {
                    b.HasOne("CompHomp.Models.User", "User")
                        .WithMany("PurchaseHistory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompHomp.Models.PurchaseHistoryItem", b =>
                {
                    b.HasOne("CompHomp.Models.Build", "Build")
                        .WithMany("PurchaseHistoryItems")
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompHomp.Models.PurchaseHistory", "PurchaseHistory")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompHomp.Models.User", null)
                        .WithMany("PurchaseHistoryItems")
                        .HasForeignKey("UserId");

                    b.Navigation("Build");

                    b.Navigation("PurchaseHistory");
                });

            modelBuilder.Entity("CompHomp.Models.Sale", b =>
                {
                    b.HasOne("CompHomp.Models.Build", "Build")
                        .WithMany()
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompHomp.Models.User", "User")
                        .WithMany("Sales")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Build");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompHomp.Models.Build", b =>
                {
                    b.Navigation("BuildComments");

                    b.Navigation("BuildRatings");

                    b.Navigation("PurchaseHistoryItems");
                });

            modelBuilder.Entity("CompHomp.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("CompHomp.Models.PurchaseHistory", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("CompHomp.Models.User", b =>
                {
                    b.Navigation("Builds");

                    b.Navigation("CartItems");

                    b.Navigation("Orders");

                    b.Navigation("PurchaseHistory");

                    b.Navigation("PurchaseHistoryItems");

                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
